var db = require('mongoose');

var newRepository = function (model, connectionString) {
    return {
        findByID: function (id, select) {
            return new Promise(function (success, fail) {
                db.Promise = global.Promise;
                db.connect(connectionString, {useMongoClient: true});
                model.findOne({
                    _id: id
                }).select(select).exec(function (err, entity) {
                    if (err) {
                        fail(err);
                    } else {
                        success(entity);
                    }
                });
                db.connection.close();
            });
        },
        find: function (params, select, skip, limit, sort) {
            return new Promise(function (success, fail) {
                db.Promise = global.Promise;
                db.connect(connectionString, {useMongoClient: true});
                model.find(params).skip(skip).limit(limit).sort(sort).select(select).exec(function (err, entities) {
                    if (err) {
                        fail(err);
                    } else {
                        success(entities);
                    }
                });
                db.connection.close();
            });
        },
        add: function (entity) {
            return new Promise(function (success, fail) {
                db.Promise = global.Promise;
                db.connect(connectionString, {useMongoClient: true});
                entity.save(function (err, entity) {
                    if (err) {
                        fail(err);
                    } else {
                        success(entity);
                    }
                });
                db.connection.close();
            });
        },
        findOneAndUpdate: function (params, set) {
            return new Promise(function (success, fail) {
                db.Promise = global.Promise;
                db.connect(connectionString, {useMongoClient: true});
                model.findOneAndUpdate(params, set).exec(function (err, entity) {
                    if (err) {
                        fail(err);
                    } else {
                        success(entity);
                    }
                });
                db.connection.close();
            });
        },
        update: function (entity) {
            return new Promise(function (success, fail) {
                db.Promise = global.Promise;
                db.connect(connectionString, {useMongoClient: true});
                entity.save(function (err, newEntity) {
                    if (err) {
                        fail(err);
                    } else {
                        success(newEntity);
                    }
                });
                db.connection.close();
            });
        },
        remove: function (id) {
            return new Promise(function (success, fail) {
                db.Promise = global.Promise;
                db.connect(connectionString, {useMongoClient: true});
                model.findOne({
                    _id: id
                }).remove().exec(function (err) {
                    if (err) {
                        fail(err);
                    } else {
                        success(true);
                    }
                });
                db.connection.close();
            });
        }
    };
};

module.exports = newRepository;
